plugins {
    id 'java-library'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.145'
}
group = mod_group_id
version = mod_version
base {
    archivesName = modId
}
// Mojang ships Java 21 to end users starting in 1.20.5, so mods should target Java 21.
java.toolchain.languageVersion = JavaLanguageVersion.of(21)


println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.modId
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.modId
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.modId
    }

    data {
        programArguments.addAll '--mod', project.modId, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    flatDir {
        dir 'libs'
    }

    maven { url = "https://maven.enginehub.org/repo/" }
    maven {
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content {
            includeGroup("software.bernie.geckolib")
        }
    }
    maven { url = "https://maven.theillusivec4.top" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.kosmx.dev/" }
    maven { url = "https://code.redspace.io/releases" }
    maven {
        url = uri("https://jitpack.io")
        content {
            includeGroup("com.github.IGN-Styly")
        }
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = uri("https://maven.saps.dev/releases")
        content {
            includeGroup("dev.latvian.mods")
            includeGroup("dev.latvian.apps")
        }
    }
    maven {
        url = uri("https://jitpack.io")
        content {
            includeGroup("com.github.rtyley")
        }
    }
    maven {
        setUrl("https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/")
        content {
            includeGroup("software.bernie.geckolib")
        }
    }
}

dependencies {
    // FORGE ******************************************************************************************************
    implementation "net.neoforged:neoforge:${neoVersion}"

    // GECKOLIB ***************************************************************************************************
    implementation "software.bernie.geckolib:geckolib-neoforge-${minecraftVersion}:${geckolib_version}"

    // CAELUS *****************************************************************************************************
    compileOnly "com.illusivesoulworks.caelus:caelus-neoforge:${caelus_version}:api"
    localRuntime "com.illusivesoulworks.caelus:caelus-neoforge:${caelus_version}"

    // PLAYER ANIMATOR ********************************************************************************************
    implementation "dev.kosmx.player-anim:player-animation-lib-forge:${player_animator_version}"

    // JEI ********************************************************************************************************
    compileOnly "mezz.jei:jei-${jei_mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${jei_mc_version}-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-${jei_mc_version}-neoforge:${jei_version}"

    //localRuntime "curse.maven:just-enough-effect-descriptions-jeed-532286:4599099")
    // CURIOS *****************************************************************************************************
    //todo: 1.21: find correct maven for new curios
    implementation "curse.maven:adorned-1036809:5546365"

//    // PATCHOULI **************************************************************************************************
    compileOnly "vazkii.patchouli:Patchouli:${patchouli_version}-NEOFORGE"
//    // APOTHEOSIS
    compileOnly "curse.maven:apotheosis-${apotheosis_version}"
    implementation "curse.maven:apothic-attributes-898963:5597608"
    implementation "curse.maven:placebo-283644:5597604"

    // JSON ******************************************************************************************************
    implementation "com.google.code.gson:gson:${gson_version}"

    // ISS *****************************************************************************************************
    implementation("io.redspace:irons_spellbooks:${irons_spells_version}")

    // IB CORE DEPS
    //implementation("com.github.IGN-Styly:Arcanus:1.21.1-0.3.6.1a")


    testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation "net.neoforged:testframework:${neoVersion}"
}

jarJar.enable()


jar {
    manifest {
        attributes([
                "Specification-Title"     : modName,
                "Specification-Vendor"    : modAuthors,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Version"  : project.version,
                "Implementation-Title"    : project.name,
                "Implementation-Vendor"   : modAuthors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
    exclude('**/*.psd')
    exclude('**/*.bbmodel')
}

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : modName,
                "Specification-Vendor"    : modAuthors,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : archiveVersion,
                "Implementation-Vendor"   : modAuthors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "mixins.${modId}.json"
        ])
    }
    exclude('**/*.psd')
    exclude('**/*.bbmodel')
}

java {
    withSourcesJar()
    //withJavadocJar()
}

artifacts {
    archives sourcesJar
}


publishing {
    tasks.publish.dependsOn 'build  '
    publications {
        mavenJava(MavenPublication) {
            artifactId jar.name
            artifact jar
            artifact sourcesJar
        }
    }

    repositories {
        maven {
            name = "github"
            url = "https://maven.pkg.github.com/Ironbound-Studios/IronboundCore"
            credentials {
                username = "" // github name
                password = System.getenv("PASSWORD") // token
            }
        }
    }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraftVersion,
            minecraft_version_range: minecraftVersionRange,
            neo_version            : neoVersion,
            neo_version_range      : neoVersionRange,
            loader_version_range   : loaderVersionRange,
            caelus_version         : caelus_version,
            geckolib_version       : geckolib_version,
            player_animator_version: player_animator_version,
            mod_id                 : modId,
            mod_name               : modName,
            mod_version            : version,
            mod_license            : modLicense,
            mod_authors            : modAuthors,
            mod_credits            : modCredits,
            mod_description        : modDescription,
            mod_display_url        : "https://discord.gg/BgepPadNRZ",
            mod_issue_tracker      : "https://discord.gg/BgepPadNRZ",
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.register('copyAnimations', Copy) {
    from "src/main/resources/assets/${modId}/player_animation"
    include 'casting_animations.json'
    into "src/main/resources/assets/${modId}/animations"
}

tasks.classes.dependsOn(tasks.copyAnimations)
tasks.processResources.dependsOn(tasks.copyAnimations)
tasks.sourcesJar.dependsOn(tasks.copyAnimations)

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}